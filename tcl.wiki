= TCL =

== MagicSplat ==

MagicSplat documentation:
https://www.magicsplat.com/tcl-docs/doctoc_tcl.html


== RBC ==

RBC library documentation:
https://www.magicsplat.com/tcl-docs/doctoc_rbc.html
http://chiselapp.com/user/rene/repository/rbc/index


Enable zooming:
```tcl
Rbc_ZoomStack .plot
```

Some colors to use for plotting:
```
set COLORS { forestgreen orange cornflowerblue magenta darkolivegreen4 indianred1 tan4 red2 darkblue mediumorchid1 irebrick4 yellowgreen lightsalmon tan3 tan1 darkgray wheat4 #DDAD4B chartreuse seagreen1 moccasin mediumvioletred seagreen cadetblue1 darkolivegreen1 tan2 tomato3  #7CE3D8 gainsboro }
```

=== Plot Markers ===

Set step size of major ticks:
```tcl
.plot axis configure x -stepsize 1.0
```

Set step size and set min and max range for y axis:
```tcl

.plot axis configure y -stepsize 16 -min 0 -max 256
```

Set subdivisions for minor ticks on x axis:
```tcl
.plot axis configure x -subdivisions 15
```
    
=== StripCharts ===

"-autorange" is the total seconds worth of data to show at once.

"-shiftby" is the seconds to shift on fill. This is how many seconds are
in front of the data once the plot fills and the data is shifted to the left.
    

== Binary File Configuration ==

set f [open fileName]
fconfigure $f -translation binary -encoding binary -eofchar {}

== Bash Script that is Also a TCL Script ==

Start the file with:

```bash
#!/bin/sh
# The next line is executed by /bin/sh, but not tcl \
exec wish "$0" -- $*
```

followed by TCL code. This executes the script as a bash script, but this
script immediately invokes TCL (wish in this case). The trick seems to be
the '\' character, which bash must not use to merge lines, but TCL does.

This allows an executable bash script to open a GUI, for example. The concept
comes from cobra's 'window.tcl' file.

== Snippets ==

Search through a list and return matching items:

```tcl
lsearch -glob -all -inline $values $glob
```

Export an ensemble with a specific name, even if it is within a nested namespace:
```tcl
namespace ensemble create -command ::NAME
```

Include a namespace, but only use its definitions if a name is not in the current namespace.
In other words, fall back to the given namespace but do not include its names in the current one.
```tcl
namespace path NAMESPACE
```

Kill whole application when a window is closed:
```tcl
bind .window <Destroy> [list destroy .]
```
